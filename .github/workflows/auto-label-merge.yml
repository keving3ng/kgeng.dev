name: Auto Label & Merge

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-label:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == github.repository_owner
    steps:
      - name: Auto-label Claude generated PRs
        if: contains(github.event.pull_request.body, 'Generated with [Claude Code]')
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "claude-generated"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-label swarm development
        if: contains(github.event.pull_request.body, 'Co-Authored-By: Claude')
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "swarm-dev"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-label portfolio updates
        if: contains(github.event.pull_request.files_changed, 'src/data/') || contains(github.event.pull_request.title, 'portfolio') || contains(github.event.pull_request.title, 'experience') || contains(github.event.pull_request.title, 'content')
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "portfolio-update"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-label config changes
        if: contains(github.event.pull_request.files_changed, '.github/') || contains(github.event.pull_request.files_changed, '.claude/') || contains(github.event.pull_request.files_changed, 'package.json') || contains(github.event.pull_request.files_changed, 'tailwind.config') || contains(github.event.pull_request.files_changed, 'next.config')
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "config-change"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto-merge:
    runs-on: ubuntu-latest
    needs: auto-label
    if: github.event.pull_request.user.login == github.repository_owner
    steps:
      - name: Check if PR has auto-merge labels
        id: check-labels
        run: |
          labels="${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          echo "Labels: $labels"
          
          if [[ "$labels" == *"auto-merge"* ]] || [[ "$labels" == *"ship-it"* ]] || [[ "$labels" == *"no-review"* ]]; then
            echo "should_merge=true" >> $GITHUB_OUTPUT
          elif [[ "$labels" == *"quick-fix"* ]] && [[ "$labels" == *"claude-generated"* ]]; then
            echo "should_merge=true" >> $GITHUB_OUTPUT  
          else
            echo "should_merge=false" >> $GITHUB_OUTPUT
          fi

      - name: Wait for checks to pass
        if: steps.check-labels.outputs.should_merge == 'true'
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'build'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success,neutral

      - name: Auto-merge PR
        if: steps.check-labels.outputs.should_merge == 'true'
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --squash --auto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  vibe-check:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'vibe-check')
    steps:
      - name: Vibe Check Comment
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "🌊 **Vibe Check Complete** ✨
          
          This PR has been vibed and approved by the cosmic forces of good code. 
          
          Status: **Vibe Immaculate** ✅
          Deployment Readiness: **Maximum** 🚀
          Breaking Things Probability: **Minimal** 🙏
          
          _Trust the process, trust the vibe_ 🎯"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  experimental-warning:
    runs-on: ubuntu-latest  
    if: contains(github.event.pull_request.labels.*.name, 'experimental')
    steps:
      - name: Experimental Warning
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "⚠️ **EXPERIMENTAL CODE DETECTED** ⚠️
          
          This PR contains experimental changes that might:
          - Break things in interesting ways 💥
          - Introduce new features that work perfectly 🎯  
          - Open portals to parallel dimensions 🌀
          - All of the above simultaneously 🤯
          
          Proceed with caution and have your rollback plan ready! 🛡️"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}